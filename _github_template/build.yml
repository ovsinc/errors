name: Build

on:
  push:
    branches:
      - main
      - releases
      - example
  pull_request:
    branches:
      - main


jobs:

  test:
    name: Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go-version: [1.16.x, 1.15.x, 1.14.x, 1.13.x, 1.12.x]
        os: [ubuntu-latest]
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run Unit tests with coverage report.
        run: go test -mod=vendor -v -race -coverprofile coverage.txt -covermode=atomic
      - name: Upload Coverage report to CodeCov
        uses: codecov/codecov-action@v1.0.0
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: ./coverage.txt
      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

  lint:
    name: Lint the code
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/golangci-lint
            ~/.cache/go-build
            ~/go/pkg
          key: golangci-lint.cache-{platform-arch}-{interval_number}-{go.mod_hash}
          restore-keys: |
            golangci-lint.cache-{interval_number}-
            golangci-lint.cache-

  build:
    name: Build
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
    - name: Download module
      env: 
         GOPROXY: "https://proxy.golang.org"
      run: go get -d download github.com/ovsinc/errors